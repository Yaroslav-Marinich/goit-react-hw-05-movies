{"version":3,"file":"static/js/203.d158b25e.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/moviesAPI.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport './styles.css';\n\nexport const MoviesList = ({ movies, state }) => {\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li className='movieListItem' key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={state}>\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","import './styles.css';\n\nexport const SearchBar = ({ onSubmit }) => {\n  return (\n    <div className=\"serchBarContainer\">\n      <form className='searchBarForm' action=\"\" onSubmit={onSubmit}>\n        <input\n          className=\"searchBarInput\"\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Enter movie name\"\n          autoFocus\n          autoComplete=\"off\"\n        />\n        <button\n          className=\"searchBarBtn\"\n          type=\"submit\"\n          aria-label=\"Search movies\"\n        >\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getMoviesBySearch } from '../services/moviesAPI';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport Loader from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (search === '') {\n      alert('Please enter movie name');\n      return;\n    }\n\n    setSearchParams({ search: e.target.elements.search.value });\n    e.target.reset();\n  };\n\n  useEffect(() => {\n    if (!search) return;\n\n    const getMovies = async name => {\n      try {\n        setIsLoading(true);\n        const movies = await getMoviesBySearch(name);\n        setMovies([...movies]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies(search);\n  }, [search]);\n\n  return (\n    <main>\n      <SearchBar onSubmit={handleSubmit} />\n      {isLoading ? (\n        <div>\n          <Loader />\n        </div>\n      ) : (\n        <MoviesList movies={movies} state={{ from: location }} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a2b8e8e4d90d5ba4f206c187ddc5e80f';\n\nexport async function getTrendingMovies(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?page=${page}`,\n      { params }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesBySearch(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/search/movie?`, {\n      params,\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}?`, {\n      params,\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport async function getMovieCast(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["MoviesList","movies","state","map","movie","className","to","id","title","SearchBar","onSubmit","action","type","name","placeholder","autoFocus","autoComplete","useState","setMovies","isLoading","setIsLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","search","get","useEffect","getMovies","getMoviesBySearch","console","log","e","preventDefault","target","elements","value","reset","alert","Loader","from","BASE_URL","API_KEY","getTrendingMovies","page","params","api_key","language","axios","response","data","results","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}